# .github/workflows/close-stale-draft-prs.yml
name: Close stale draft PRs

on:
  workflow_call:

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: close-stale-draft-prs
  cancel-in-progress: false

jobs:
  close-stale-drafts:
    runs-on: ubuntu-latest
    env:
      DAYS_INACTIVE: "15"
      EXEMPT_LABELS: "pr:keep-open" # keep-open shall be done in EXTREME cases.
      CLOSE_COMMENT: |
        This draft pull request had no activity for over 15 days and is being **auto-closed** to keep the queue tidy. 
        
        If you plan to continue, please reopen the PR or open a new one when it’s ready for review.
    steps:
      - name: Close inactive draft PRs
        uses: actions/github-script@v7
        with:
          script: |
            const days = parseInt(process.env.DAYS_INACTIVE || "15", 10);
            const cutoff = new Date(Date.now() - days*24*60*60*1000);
            const exempt = new Set((process.env.EXEMPT_LABELS || "")
              .split(",").map(s => s.trim()).filter(Boolean).map(s => s.toLowerCase()));

            const { owner, repo } = context.repo;

            const allOpenPRs = await github.paginate(github.rest.pulls.list, {
              owner, repo, state: "open", per_page: 100
            });

            const staleDrafts = allOpenPRs.filter(pr => {
              if (!pr.draft) return false;
              if (new Date(pr.updated_at) >= cutoff) return false;
              const labels = (pr.labels || []).map(l => (typeof l === "string" ? l : l.name) || "").map(n => n.toLowerCase());
              return !labels.some(l => exempt.has(l));
            });

            if (staleDrafts.length === 0) {
              core.info("No stale draft PRs to close ✅");
              return;
            }

            core.info(`Closing ${staleDrafts.length} stale draft PR(s)…`);
            for (const pr of staleDrafts) {
              try {
                await github.rest.issues.createComment({
                  owner, repo, issue_number: pr.number, body: process.env.CLOSE_COMMENT
                });
                await github.rest.issues.update({
                  owner, repo, issue_number: pr.number, state: "closed"
                });
              } catch (err) {
                core.warning(`Failed to close #${pr.number}: ${err.message}`);
              }
            }
